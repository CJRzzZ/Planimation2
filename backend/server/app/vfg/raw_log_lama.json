{"result": {"call": "timeout 30 planutils run lama-first -- domain problem", "output": {"sas_plan": "(load-truck package6 truck3 city3-1)\n(drive-truck truck3 city3-1 city3-2 city3)\n(unload-truck package6 truck3 city3-2)\n(load-truck package4 truck1 city1-1)\n(load-truck package3 truck1 city1-1)\n(drive-truck truck1 city1-1 city1-2 city1)\n(unload-truck package4 truck1 city1-2)\n(unload-truck package3 truck1 city1-2)\n(load-airplane package5 plane2 city4-2)\n(fly-airplane plane2 city4-2 city6-2)\n(fly-airplane plane2 city6-2 city1-2)\n(load-airplane package4 plane2 city1-2)\n(load-airplane package3 plane2 city1-2)\n(load-airplane package2 plane2 city1-2)\n(fly-airplane plane2 city1-2 city3-2)\n(load-airplane package6 plane2 city3-2)\n(unload-airplane package4 plane2 city3-2)\n(fly-airplane plane2 city3-2 city1-2)\n(unload-airplane package6 plane2 city1-2)\n(fly-airplane plane2 city1-2 city6-2)\n(unload-airplane package5 plane2 city6-2)\n(unload-airplane package3 plane2 city6-2)\n(unload-airplane package2 plane2 city6-2)\n(drive-truck truck6 city6-1 city6-2 city6)\n(load-truck package3 truck6 city6-2)\n(drive-truck truck6 city6-2 city6-1 city6)\n(unload-truck package3 truck6 city6-1)\n; cost = 27 (unit cost)\n"}, "output_type": "generic", "stderr": "", "stdout": "INFO     planner time limit: None\nINFO     planner memory limit: None\n\nINFO     Running translator.\nINFO     translator stdin: None\nINFO     translator time limit: None\nINFO     translator memory limit: None\nINFO     translator command line string: /usr/bin/python3 /workspace/downward/builds/release/bin/translate/translate.py domain problem --sas-file output.sas\nParsing...\nParsing: [0.000s CPU, 0.003s wall-clock]\nNormalizing task... [0.000s CPU, 0.000s wall-clock]\nInstantiating...\nGenerating Datalog program... [0.000s CPU, 0.000s wall-clock]\nNormalizing Datalog program...\nNormalizing Datalog program: [0.010s CPU, 0.005s wall-clock]\nPreparing model... [0.000s CPU, 0.003s wall-clock]\nGenerated 51 rules.\nComputing model... [0.000s CPU, 0.008s wall-clock]\n643 relevant atoms\n678 auxiliary atoms\n1321 final queue length\n1575 total queue pushes\nCompleting instantiation... [0.010s CPU, 0.006s wall-clock]\nInstantiating: [0.020s CPU, 0.022s wall-clock]\nComputing fact groups...\nFinding invariants...\n6 initial candidates\nFinding invariants: [0.000s CPU, 0.001s wall-clock]\nChecking invariant weight... [0.000s CPU, 0.000s wall-clock]\nInstantiating groups... [0.000s CPU, 0.001s wall-clock]\nCollecting mutex groups... [0.000s CPU, 0.000s wall-clock]\nChoosing groups...\n0 uncovered facts\nChoosing groups: [0.000s CPU, 0.000s wall-clock]\nBuilding translation key... [0.000s CPU, 0.000s wall-clock]\nComputing fact groups: [0.000s CPU, 0.003s wall-clock]\nBuilding STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]\nBuilding dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]\nBuilding mutex information...\nBuilding mutex information: [0.000s CPU, 0.000s wall-clock]\nTranslating task...\nProcessing axioms...\nSimplifying axioms... [0.000s CPU, 0.000s wall-clock]\nTranslator axioms removed by simplifying: 0\nComputing negative axioms... [0.000s CPU, 0.000s wall-clock]\nProcessing axioms: [0.000s CPU, 0.000s wall-clock]\nTranslating task: [0.010s CPU, 0.006s wall-clock]\n0 effect conditions simplified\n0 implied preconditions added\nDetecting unreachable propositions...\n0 operators removed\n0 axioms removed\n14 propositions removed\nDetecting unreachable propositions: [0.000s CPU, 0.003s wall-clock]\nReordering and filtering variables...\n14 of 14 variables necessary.\n0 of 14 mutex groups necessary.\n360 of 360 operators necessary.\n0 of 0 axiom rules necessary.\nReordering and filtering variables: [0.000s CPU, 0.001s wall-clock]\nTranslator variables: 14\nTranslator derived variables: 0\nTranslator facts: 144\nTranslator goal facts: 6\nTranslator mutex groups: 0\nTranslator total mutex groups size: 0\nTranslator operators: 360\nTranslator axioms: 0\nTranslator task size: 1532\nTranslator peak memory: 30900 KB\nWriting output... [0.000s CPU, 0.001s wall-clock]\nDone! [0.030s CPU, 0.040s wall-clock]\ntranslate exit code: 0\n\nINFO     Running search (release).\nINFO     search stdin: output.sas\nINFO     search time limit: None\nINFO     search memory limit: None\nINFO     search command line string: /workspace/downward/builds/release/bin/downward --search 'let(hlm,landmark_sum(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false),let(hff,ff(transform=adapt_costs(one)),lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)))' --internal-plan-file sas_plan < output.sas\n[t=0.00223599s, 12592 KB] reading input...\n[t=0.00326289s, 12592 KB] done reading input!\n[t=0.00664261s, 12988 KB] Initializing landmark sum heuristic...\n[t=0.00670215s, 12988 KB] Generating landmark graph...\n[t=0.00673651s, 12988 KB] Building a landmark graph with reasonable orders.\n[t=0.00676582s, 12988 KB] Initializing Exploration...\n[t=0.00683767s, 12988 KB] Generating landmarks using the RPG/SAS+ approach\n[t=0.00769805s, 12988 KB] Removed 0 reasonable or obedient reasonable orders\n[t=0.00773839s, 12988 KB] Landmarks generation time: 0.00100302s\n[t=0.00775807s, 12988 KB] Discovered 33 landmarks, of which 8 are disjunctive and 0 are conjunctive.\n[t=0.00777121s, 12988 KB] 75 edges\n[t=0.00778384s, 12988 KB] approx. reasonable orders\n[t=0.00780628s, 12988 KB] approx. obedient reasonable orders\n[t=0.00782488s, 12988 KB] Removed 0 reasonable or obedient reasonable orders\n[t=0.00783772s, 12988 KB] Landmarks generation time: 0.00112738s\n[t=0.00785078s, 12988 KB] Discovered 33 landmarks, of which 8 are disjunctive and 0 are conjunctive.\n[t=0.0078626s, 12988 KB] 75 edges\n[t=0.00787457s, 12988 KB] Landmark graph generation time: 0.0011846s\n[t=0.00788945s, 12988 KB] Landmark graph contains 33 landmarks, of which 8 are disjunctive and 0 are conjunctive.\n[t=0.00790122s, 12988 KB] Landmark graph contains 75 orderings.\n[t=0.00799435s, 12988 KB] Simplifying 360 unary operators... done! [360 unary operators]\n[t=0.00810442s, 12988 KB] time to simplify: 0.000130815s\n[t=0.00814356s, 12988 KB] Initializing additive heuristic...\n[t=0.00815817s, 12988 KB] Initializing FF heuristic...\n[t=0.00820236s, 12988 KB] Building successor generator...done!\n[t=0.00834845s, 12988 KB] peak memory difference for successor generator creation: 0 KB\n[t=0.00836067s, 12988 KB] time for successor generation creation: 0.000108443s\n[t=0.00837575s, 12988 KB] Variables: 14\n[t=0.0083877s, 12988 KB] FactPairs: 144\n[t=0.0083994s, 12988 KB] Bytes per state: 8\n[t=0.00843343s, 12988 KB] Conducting lazy best first search, (real) bound = 2147483647\n[t=0.00845592s, 12988 KB] 9 initial landmarks, 6 goal landmarks\n[t=0.00849641s, 12988 KB] New best heuristic value for landmark_sum(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false): 24\n[t=0.00851272s, 12988 KB] New best heuristic value for ff(transform=adapt_costs(one)): 26\n[t=0.00852539s, 12988 KB] g=0, 1 evaluated, 0 expanded\n[t=0.00854872s, 12988 KB] Initial heuristic value for landmark_sum(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false): 24\n[t=0.00856163s, 12988 KB] Initial heuristic value for ff(transform=adapt_costs(one)): 26\n[t=0.00864969s, 12988 KB] New best heuristic value for landmark_sum(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false): 23\n[t=0.00866441s, 12988 KB] New best heuristic value for ff(transform=adapt_costs(one)): 25\n[t=0.00867649s, 12988 KB] g=1, 6 evaluated, 5 expanded\n[t=0.00872247s, 12988 KB] New best heuristic value for landmark_sum(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false): 22\n[t=0.00873687s, 12988 KB] g=2, 8 evaluated, 7 expanded\n[t=0.00881339s, 12988 KB] New best heuristic value for landmark_sum(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false): 21\n[t=0.00883135s, 12988 KB] New best heuristic value for ff(transform=adapt_costs(one)): 24\n[t=0.00884408s, 12988 KB] g=3, 11 evaluated, 10 expanded\n[t=0.00890177s, 12988 KB] New best heuristic value for landmark_sum(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false): 20\n[t=0.00891566s, 12988 KB] New best heuristic value for ff(transform=adapt_costs(one)): 23\n[t=0.00893022s, 12988 KB] g=4, 14 evaluated, 13 expanded\n[t=0.00897419s, 12988 KB] New best heuristic value for ff(transform=adapt_costs(one)): 22\n[t=0.00898787s, 12988 KB] g=5, 16 evaluated, 15 expanded\n[t=0.00905045s, 12988 KB] New best heuristic value for landmark_sum(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false): 19\n[t=0.00907509s, 12988 KB] g=5, 18 evaluated, 17 expanded\n[t=0.00914209s, 12988 KB] New best heuristic value for ff(transform=adapt_costs(one)): 21\n[t=0.009164s, 12988 KB] g=6, 20 evaluated, 19 expanded\n[t=0.0092097s, 12988 KB] New best heuristic value for landmark_sum(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false): 18\n[t=0.00923118s, 12988 KB] New best heuristic value for ff(transform=adapt_costs(one)): 19\n[t=0.0092499s, 12988 KB] g=6, 21 evaluated, 20 expanded\n[t=0.00931371s, 12988 KB] New best heuristic value for landmark_sum(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false): 17\n[t=0.00933556s, 12988 KB] New best heuristic value for ff(transform=adapt_costs(one)): 18\n[t=0.00935476s, 12988 KB] g=7, 23 evaluated, 22 expanded\n[t=0.00941828s, 12988 KB] New best heuristic value for landmark_sum(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false): 16\n[t=0.00944053s, 12988 KB] New best heuristic value for ff(transform=adapt_costs(one)): 17\n[t=0.00945964s, 12988 KB] g=8, 25 evaluated, 24 expanded\n[t=0.00952253s, 12988 KB] New best heuristic value for landmark_sum(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false): 15\n[t=0.00954514s, 12988 KB] g=9, 27 evaluated, 26 expanded\n[t=0.0096082s, 12988 KB] New best heuristic value for ff(transform=adapt_costs(one)): 16\n[t=0.00962975s, 12988 KB] g=9, 29 evaluated, 28 expanded\n[t=0.00969648s, 12988 KB] New best heuristic value for landmark_sum(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false): 14\n[t=0.00971214s, 12988 KB] g=10, 32 evaluated, 31 expanded\n[t=0.00974393s, 12988 KB] New best heuristic value for ff(transform=adapt_costs(one)): 15\n[t=0.0097571s, 12988 KB] g=10, 33 evaluated, 32 expanded\n[t=0.00982396s, 12988 KB] New best heuristic value for ff(transform=adapt_costs(one)): 14\n[t=0.00983746s, 12988 KB] g=11, 37 evaluated, 36 expanded\n[t=0.00991744s, 12988 KB] New best heuristic value for landmark_sum(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false): 13\n[t=0.00993192s, 12988 KB] g=11, 42 evaluated, 41 expanded\n[t=0.0099729s, 12988 KB] New best heuristic value for ff(transform=adapt_costs(one)): 13\n[t=0.00998631s, 12988 KB] g=12, 44 evaluated, 43 expanded\n[t=0.0100919s, 12988 KB] New best heuristic value for landmark_sum(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false): 12\n[t=0.0101061s, 12988 KB] g=12, 51 evaluated, 50 expanded\n[t=0.0101488s, 12988 KB] New best heuristic value for ff(transform=adapt_costs(one)): 12\n[t=0.0101629s, 12988 KB] g=13, 52 evaluated, 51 expanded\n[t=0.0102867s, 12988 KB] New best heuristic value for landmark_sum(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false): 11\n[t=0.0103016s, 12988 KB] New best heuristic value for ff(transform=adapt_costs(one)): 11\n[t=0.0103134s, 12988 KB] g=14, 60 evaluated, 59 expanded\n[t=0.0104086s, 12988 KB] New best heuristic value for landmark_sum(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false): 10\n[t=0.0104227s, 12988 KB] New best heuristic value for ff(transform=adapt_costs(one)): 10\n[t=0.0104346s, 12988 KB] g=16, 66 evaluated, 65 expanded\n[t=0.0104977s, 12988 KB] New best heuristic value for landmark_sum(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false): 9\n[t=0.0105114s, 12988 KB] New best heuristic value for ff(transform=adapt_costs(one)): 9\n[t=0.0105231s, 12988 KB] g=17, 70 evaluated, 69 expanded\n[t=0.0105624s, 12988 KB] New best heuristic value for landmark_sum(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false): 8\n[t=0.0105755s, 12988 KB] New best heuristic value for ff(transform=adapt_costs(one)): 8\n[t=0.0105871s, 12988 KB] g=18, 72 evaluated, 71 expanded\n[t=0.0106376s, 12988 KB] New best heuristic value for landmark_sum(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false): 7\n[t=0.0106509s, 12988 KB] New best heuristic value for ff(transform=adapt_costs(one)): 7\n[t=0.0106626s, 12988 KB] g=19, 75 evaluated, 74 expanded\n[t=0.0107007s, 12988 KB] New best heuristic value for landmark_sum(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false): 6\n[t=0.0107142s, 12988 KB] New best heuristic value for ff(transform=adapt_costs(one)): 6\n[t=0.0107258s, 12988 KB] g=20, 77 evaluated, 76 expanded\n[t=0.0107635s, 12988 KB] New best heuristic value for landmark_sum(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false): 5\n[t=0.0107767s, 12988 KB] New best heuristic value for ff(transform=adapt_costs(one)): 5\n[t=0.0107883s, 12988 KB] g=21, 79 evaluated, 78 expanded\n[t=0.0108256s, 12988 KB] New best heuristic value for landmark_sum(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false): 4\n[t=0.0108391s, 12988 KB] New best heuristic value for ff(transform=adapt_costs(one)): 4\n[t=0.0108508s, 12988 KB] g=22, 81 evaluated, 80 expanded\n[t=0.0108878s, 12988 KB] New best heuristic value for landmark_sum(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false): 3\n[t=0.0109007s, 12988 KB] New best heuristic value for ff(transform=adapt_costs(one)): 3\n[t=0.0109126s, 12988 KB] g=23, 83 evaluated, 82 expanded\n[t=0.0109515s, 12988 KB] New best heuristic value for landmark_sum(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false): 2\n[t=0.010967s, 12988 KB] New best heuristic value for ff(transform=adapt_costs(one)): 2\n[t=0.010979s, 12988 KB] g=25, 85 evaluated, 84 expanded\n[t=0.01102s, 12988 KB] New best heuristic value for landmark_sum(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false): 1\n[t=0.0110599s, 12988 KB] New best heuristic value for ff(transform=adapt_costs(one)): 1\n[t=0.0110806s, 12988 KB] g=26, 86 evaluated, 85 expanded\n[t=0.0111235s, 12988 KB] Solution found!\n[t=0.011155s, 12988 KB] Actual search time: 0.00270148s\nload-truck package6 truck3 city3-1 (1)\ndrive-truck truck3 city3-1 city3-2 city3 (1)\nunload-truck package6 truck3 city3-2 (1)\nload-truck package4 truck1 city1-1 (1)\nload-truck package3 truck1 city1-1 (1)\ndrive-truck truck1 city1-1 city1-2 city1 (1)\nunload-truck package4 truck1 city1-2 (1)\nunload-truck package3 truck1 city1-2 (1)\nload-airplane package5 plane2 city4-2 (1)\nfly-airplane plane2 city4-2 city6-2 (1)\nfly-airplane plane2 city6-2 city1-2 (1)\nload-airplane package4 plane2 city1-2 (1)\nload-airplane package3 plane2 city1-2 (1)\nload-airplane package2 plane2 city1-2 (1)\nfly-airplane plane2 city1-2 city3-2 (1)\nload-airplane package6 plane2 city3-2 (1)\nunload-airplane package4 plane2 city3-2 (1)\nfly-airplane plane2 city3-2 city1-2 (1)\nunload-airplane package6 plane2 city1-2 (1)\nfly-airplane plane2 city1-2 city6-2 (1)\nunload-airplane package5 plane2 city6-2 (1)\nunload-airplane package3 plane2 city6-2 (1)\nunload-airplane package2 plane2 city6-2 (1)\ndrive-truck truck6 city6-1 city6-2 city6 (1)\nload-truck package3 truck6 city6-2 (1)\ndrive-truck truck6 city6-2 city6-1 city6 (1)\nunload-truck package3 truck6 city6-1 (1)\n[t=0.0111808s, 12988 KB] Plan length: 27 step(s).\n[t=0.0111808s, 12988 KB] Plan cost: 27\n[t=0.0111808s, 12988 KB] Expanded 86 state(s).\n[t=0.0111808s, 12988 KB] Reopened 0 state(s).\n[t=0.0111808s, 12988 KB] Evaluated 87 state(s).\n[t=0.0111808s, 12988 KB] Evaluations: 174\n[t=0.0111808s, 12988 KB] Generated 1937 state(s).\n[t=0.0111808s, 12988 KB] Dead ends: 0 state(s).\n[t=0.0111808s, 12988 KB] Number of registered states: 87\n[t=0.0111808s, 12988 KB] Int hash set load factor: 87/128 = 0.679688\n[t=0.0111808s, 12988 KB] Int hash set resizes: 7\n[t=0.0111808s, 12988 KB] Search time: 0.00274773s\n[t=0.0111808s, 12988 KB] Total time: 0.0111808s\nSolution found.\nPeak memory: 12988 KB\nRemove intermediate file output.sas\nsearch exit code: 0\n\nINFO     Planner time: 0.30s\n"}, "status": "ok"}